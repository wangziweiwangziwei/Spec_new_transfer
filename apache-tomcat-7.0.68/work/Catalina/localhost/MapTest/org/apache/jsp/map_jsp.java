/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.68
 * Generated at: 2016-06-17 09:21:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class map_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html >\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE9\"/>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<!---------------------------百度API----------------------------------------->\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"http://libs.baidu.com/jquery/2.1.1/jquery.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=MDNPqNapg1R9y6uwgslz91aB\"></script>\r\n");
      out.write("    \r\n");
      out.write("<!---------------------------百度API----------------------------------------->\r\n");
      out.write("\r\n");
      out.write("<!---------------------------API-聚合---------------------------------------->\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer_min.js\"></script>\r\n");
      out.write("<!---------------------------API-聚合---------------------------------------->\r\n");
      out.write("\t<title>map</title>\r\n");
      out.write("\t\t<style type=\"text/css\">\r\n");
      out.write("\t\r\n");
      out.write("\t\tbody,html{width: 100%;height: 100%;overflow: hidden;margin:0;font-family:\"微软雅黑\";}\r\n");
      out.write("\t    #title{width: 100%; height: 5%;background-color: #ffffff;}\r\n");
      out.write("\t    #allmap{left:5%; width: 95%;height: 95%;overflow: hidden;margin:0;font-family:\"微软雅黑\";position: absolute;}\r\n");
      out.write("\t    #select1{background-color: #ffffff;}\r\n");
      out.write("\t    #image{/*颜色对比条*/ \r\n");
      out.write("\t\t\t   position: fixed;\r\n");
      out.write("\t\t\t   top:25px;\r\n");
      out.write("\t\t\t   left:10px;\r\n");
      out.write("\t\t\t   z-index: 100;}\r\n");
      out.write("\t</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"title\">\r\n");
      out.write("\t   <form method=\"post\">\r\n");
      out.write("\t   <tr> <td>\r\n");
      out.write("\t    <select id=\"select1\" name=\"name1\">\r\n");
      out.write("\t         <option value=\"0\" >----------------请选择您的电磁服务---------------\r\n");
      out.write("\t         <option value=\"1\" >辐射源位置及电磁功率分布态势图\r\n");
      out.write("\t         <option value=\"9\" >本地功率谱文件的电磁路径图\r\n");
      out.write("\t         <option value=\"2\" >辐射源位置及电磁功率路径分布图\r\n");
      out.write("\t         <option value=\"3\" >异常频点辐射源位置及等功率覆盖圆图\r\n");
      out.write("\t         <option value=\"4\" >登记发射台站的位置及属性显示图\r\n");
      out.write("\t         <option value=\"5\" >登记发射台站的当前位置及等功率覆盖圆图\r\n");
      out.write("\t         <option value=\"6\" >所有发射台站的位置及属性显示图\r\n");
      out.write("\t         <option value=\"7\" >所有注册监测终端的位置及属性显示图\r\n");
      out.write("\t         <option value=\"8\" >当前所有在网监测终端的位置及属性图\r\n");
      out.write("\t    </select></td>\r\n");
      out.write("\t    <td colspan=\"2\">\r\n");
      out.write("\t     <input type=\"button\" value=\"确定\" onclick=\"Query();\">\r\n");
      out.write("\t     <input id=\"genzong\" type=\"button\" value=\"跟踪\" onclick=\"alwaysSendData();\">\r\n");
      out.write("\t     </td></tr>\r\n");
      out.write("\t   </form>\r\n");
      out.write("\t</div><div id=\"allmap\"></div>\r\n");
      out.write("\t<div id = \"image\"><img src=\"imgs/colorbar.png\" ></div>\r\n");
      out.write("\t<div id=\"control\"> \r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t//百度地图API功能\r\n");
      out.write("\tvar map = new BMap.Map(\"allmap\");  // 创建Map实例\r\n");
      out.write("\tmap.centerAndZoom(\"武汉\",13);       // 初始化地图,用城市名设置地图中心点\r\n");
      out.write("\tmap.enableScrollWheelZoom(true);    //开启鼠标滚轮缩放\r\n");
      out.write("    map.addControl(new BMap.MapTypeControl());//添加地图类型控件\r\n");
      out.write("\tmap.addControl(new BMap.ScaleControl({anchor:BMAP_ANCHOR_BOTTOM_LEFT}));//左下角添加比例尺控件\r\n");
      out.write("\tmap.addControl(new BMap.NavigationControl());//左上角添加默认地图缩放平移控件\r\n");
      out.write("\t//marker.setAnimation(BMAP_ANIMATION_BOUNCE);//设置点的弹跳\r\n");
      out.write("\t\r\n");
      out.write("\t//map.addEventListener(\"click\",function(p){alert(p.point.lng+\",\"+p.point.lat)});\r\n");
      out.write("\t\r\n");
      out.write("\t//设置地图样式\r\n");
      out.write("\t//var mapStyle={\"style\":\"midnight\"};//地图显示模板(normal,dark,light,midnight)\r\n");
      out.write("\t//map.setMapStyle(mapStyle);\r\n");
      out.write("\t\r\n");
      out.write("\t//添加网格\r\n");
      out.write("\t//var tileLayer = new BMap.TileLayer({isTransparentPng: true});\r\n");
      out.write("\t//tileLayer.getTilesUrl = function(tileCoord, zoom) {\r\n");
      out.write("\t//\tvar x = tileCoord.x;\r\n");
      out.write("\t//\tvar y = tileCoord.y;\r\n");
      out.write("\t//\treturn \"http://developer.baidu.com/map/jsdemo/img/border.png\";\r\n");
      out.write("\t//};\r\n");
      out.write("\t//function add_control(){\r\n");
      out.write("\t//\tmap.addTileLayer(tileLayer);\r\n");
      out.write("\t//}\r\n");
      out.write("\t//function delete_control(){\r\n");
      out.write("\t//\tmap.removeTileLayer(tileLayer);\r\n");
      out.write("\t//}\r\n");
      out.write("\t//add_control();\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("    //1.splice：删除元素并添加新元素，直接对数组进行修改，返回含有被删除元素的数组。\r\n");
      out.write("    //arrayObject.splice(index,howmany,element1,.....,elementX)\r\n");
      out.write("    //index：必选，规定从何处添加/删除元素。\r\n");
      out.write("    //howmany：必选，规定应该删除多少元素。未规定此参数，则删除从 index 开始到原数组结尾的所有元素。\r\n");
      out.write("    //element1:可选，规定要添加到数组的新元素。\r\n");
      out.write("\r\n");
      out.write("    var index=0;//功能码：61,62,63,64,65,66,67,68\r\n");
      out.write("   \tvar requestData = 0;      //请求\r\n");
      out.write("    //var responseDataArray1 = new Array();//响应数组\r\n");
      out.write("    //var responseDataArray2 = new Array();//响应数组\r\n");
      out.write("    var T1=0,T2=0;\r\n");
      out.write("//==========================================页面与服务器数据交互函数==========================================================//\r\n");
      out.write("function Query(){\r\n");
      out.write("\t    map.clearOverlays();//清除覆蓋物\r\n");
      out.write("\t    var obj= document.getElementById(\"select1\");\r\n");
      out.write("\t    var index = obj.selectedIndex; // 选中索引\r\n");
      out.write("\t    var value= obj.options[index].value;\r\n");
      out.write("\t    alert(value);\r\n");
      out.write("\t    \r\n");
      out.write("    \tswitch(value){ \r\n");
      out.write("\r\n");
      out.write("    \tcase \"0\":         \r\n");
      out.write("    \t\t     requestData=0;  //close the connection to database\r\n");
      out.write("    \t         break;\r\n");
      out.write("    \tcase \"1\":\r\n");
      out.write("    \t\t     requestData=1;\r\n");
      out.write("    \t\t     break;\r\n");
      out.write("    \tcase \"2\":\r\n");
      out.write("    \t\t     requestData=2;\r\n");
      out.write("    \t\t  \r\n");
      out.write("\t\t         break;\r\n");
      out.write("    \tcase \"3\":\r\n");
      out.write("    \t\t     requestData=3;\r\n");
      out.write("\t\t         break;\r\n");
      out.write("    \tcase \"4\":\r\n");
      out.write("    \t\t     requestData=4;    \t\t \r\n");
      out.write("\t\t         break;\r\n");
      out.write("    \tcase \"5\":\r\n");
      out.write("    \t\t     requestData=5;\r\n");
      out.write("\t\t         break;\r\n");
      out.write("    \tcase \"6\":\r\n");
      out.write("    \t\t     requestData=6;\r\n");
      out.write("\t\t         break; \r\n");
      out.write("    \tcase \"7\":\r\n");
      out.write("    \t\t     requestData=7;\r\n");
      out.write("\t\t         break;\r\n");
      out.write("    \tcase \"8\":\r\n");
      out.write("    \t\t     requestData=8;\r\n");
      out.write("    \t\t     break;\r\n");
      out.write("    \tcase \"9\":\r\n");
      out.write("    \t\t\trequestData=9;\r\n");
      out.write("    \t\t\tbreak;\r\n");
      out.write("    \tdefault: \r\n");
      out.write("    \t\t\t alert(\"功能码错误！\");\r\n");
      out.write("    \t\t     break;\r\n");
      out.write("    \t}\r\n");
      out.write("\t    \r\n");
      out.write("    \t//=============================JQuery-AJAX异步加载===================================//\r\n");
      out.write("    \t$.post(\"http://localhost:8080/MapTest/QueryDataBase\", \r\n");
      out.write("       \t        {\r\n");
      out.write("       \t\t\t\t convertData:\"\"+(requestData)//将页面设置的地图服务参数传到服务器\r\n");
      out.write("                     \r\n");
      out.write("       \t\t\t},\r\n");
      out.write("       \t\t    function(responseData,status){//服务器回传的数据\r\n");
      out.write("       \t\t\t\trequestData=0;//每次发完请求数据后就清除请求数据缓冲数组\r\n");
      out.write("       \t\t\t\t //window.location.reload();//刷新当前页面.\r\n");
      out.write("       \t\t\t\t alert(\"响应数据：\\n\"+responseData);\r\n");
      out.write("\r\n");
      out.write("       \t\t   if(status===\"success\"){//如果回传数据成功 \r\n");
      out.write("       \t           \r\n");
      out.write("       \t\t   switch(responseData.split(\",\")[0]){\r\n");
      out.write("       \t\t   \r\n");
      out.write("       \t\t\tcase \"61\":\r\n");
      out.write("       \t\t\t\t     var len = responseData.split(\"|\").length;\r\n");
      out.write("                   var responseDataArray1 = new Array();//响应数组\r\n");
      out.write("                     responseDataArray1 = responseData.split(\"|\");\r\n");
      out.write("                   var responseDataArray3 = new Array();\r\n");
      out.write("                   for(var i=0;i<len;i++){\r\n");
      out.write("                       var responseDataArray2 = new Array();\r\n");
      out.write("                     responseDataArray2.push(\"61\");\r\n");
      out.write("                     responseDataArray2.push(responseDataArray1[i].split(\",\")[6]);// nx////\r\n");
      out.write("                     responseDataArray2.push(responseDataArray1[i].split(\",\")[7]);// ny////\r\n");
      out.write("                    responseDataArray2.push(responseDataArray1[i].split(\",\")[8]);// △////返回参数\r\n");
      out.write("                     responseDataArray2.push(responseDataArray1[i].split(\",\")[10]);// longitude////\r\n");
      out.write("                     responseDataArray2.push(responseDataArray1[i].split(\",\")[11]);// latitude////\r\n");
      out.write("                     responseDataArray2.push(responseDataArray1[i].split(\",\")[12]);// height////\r\n");
      out.write("                     responseDataArray2.push(responseDataArray1[i].split(\",\")[13]);// power////\r\n");
      out.write("                     responseDataArray2.push(responseDataArray1[i].split(\",\")[14]);// index////\r\n");
      out.write("                     responseDataArray3[i] = responseDataArray2;\r\n");
      out.write("                   };\r\n");
      out.write("     \r\n");
      out.write("       \t\t\t\t     \r\n");
      out.write("       \t\t\r\n");
      out.write("       \t\t\t\t    T1 = window.setInterval(function(){ \r\n");
      out.write("       \t\t\t\t\t        \t\t\t\r\n");
      out.write("       \t\t\t\t    \t index1_go(responseDataArray3[T2]);\r\n");
      out.write("                     T2++;   \r\n");
      out.write("       \t\t\t\t\t     if( T2>=len )\r\n");
      out.write("       \t\t\t\t\t\t     window.clearInterval(T1); \r\n");
      out.write("       \t\t\t\t\t     }, (1/12.0)*1*60000);\r\n");
      out.write("        \t             \r\n");
      out.write("        \t             //setTimeout(function(){index1_go(responseData.split(\"|\")[1].split(\",\"));},3000);\r\n");
      out.write("        \t             //setTimeout(function(){index1_go(responseData.split(\"|\")[2].split(\",\"));},5000);\r\n");
      out.write("       \t    \t         break;\r\n");
      out.write("       \t    \tcase \"62\": \r\n");
      out.write("       \t    \t\t\r\n");
      out.write("       \t    \t\t     var len = responseData.split(\"|\").length;\r\n");
      out.write("                       var responseDataArray1 = new Array();//响应数组\r\n");
      out.write("                       var responseDataArray2 = new Array();//响应数组\r\n");
      out.write("                     responseDataArray1 = responseData.split(\"|\");\r\n");
      out.write("              \r\n");
      out.write("                     for(var i=0;i<len;i++){\r\n");
      out.write("                         responseDataArray2.push(responseDataArray1[i].split(\",\")[5]);// longitude////\r\n");
      out.write("                         responseDataArray2.push(responseDataArray1[i].split(\",\")[6]);// latitude////\r\n");
      out.write("                         responseDataArray2.push(responseDataArray1[i].split(\",\")[8]);// power////\r\n");
      out.write("                     }\r\n");
      out.write("    \t\t\t\t     \r\n");
      out.write("    \t   \r\n");
      out.write("       \t    \t\t     index2_go(responseDataArray2);\r\n");
      out.write("                     break;\r\n");
      out.write("       \t    \tcase \"63\":\r\n");
      out.write("       \t    \t\t     \r\n");
      out.write("       \t    \t\t      var len = responseData.split(\"|\").length;\r\n");
      out.write("                     var responseDataArray1 = new Array();//响应数组\r\n");
      out.write("                   responseDataArray1 = responseData.split(\"|\");\r\n");
      out.write("                     var responseDataArray2 = new Array();//响应数组\r\n");
      out.write("                   for(var i=0;i<len;i++){\r\n");
      out.write("                       responseDataArray2.push(\"63\");\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[1]);// 归属////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[2]);// longitude////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[3]);// latitude////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[4]);// 高////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[5]);// 中心频率////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[6]);// 带宽////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[7]);// 调制参数////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[8]);// 调制方式////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[9]);// 传输功率////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[10]);// 衰减指数////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[11]);// 活跃度////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[12]);// 业务属性////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[13]);// 是否非法////\r\n");
      out.write("\r\n");
      out.write("                        index3_go(responseDataArray2);\r\n");
      out.write("                        responseDataArray2.splice(0,responseDataArray2.length);\r\n");
      out.write("                        }\r\n");
      out.write("                        break;\r\n");
      out.write("       \t    \tcase \"66\":\r\n");
      out.write("       \t    \t\t\r\n");
      out.write("       \t    \tcase \"64\":\r\n");
      out.write("       \t    \t        var len = responseData.split(\"|\").length;\r\n");
      out.write("                         var responseDataArray1 = new Array();//响应数组\r\n");
      out.write("                       responseDataArray1 = responseData.split(\"|\");\r\n");
      out.write("                         var responseDataArray2 = new Array();//响应数组\r\n");
      out.write("                       for(var i=0;i<len;i++){            \r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[1]);// 归属////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[2]);// 台站ID////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[3]);// 经度////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[4]);// 纬度////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[5]);// 高////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[6]);// 起始频率////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[7]);// 终止频率////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[8]);// 最大传输功率////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[9]);// 带宽////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[10]);// 调制方式////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[11]);// 调制指数////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[12]);// 业务属性////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[13]);// 覆盖半径////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[14]);// 活跃度////\r\n");
      out.write("                       \r\n");
      out.write("                       }\r\n");
      out.write("                       index4_go(responseDataArray2);\r\n");
      out.write("                       \r\n");
      out.write("                     break;\r\n");
      out.write("       \t    \tcase \"65\":\r\n");
      out.write("       \t    \t\t    \r\n");
      out.write("                     var len = responseData.split(\"|\").length;\r\n");
      out.write("                         var responseDataArray1 = new Array();//响应数组\r\n");
      out.write("                       responseDataArray1 = responseData.split(\"|\");\r\n");
      out.write("                         var responseDataArray2 = new Array();//响应数组\r\n");
      out.write("                       for(var i=0;i<len;i++){\r\n");
      out.write("                           responseDataArray2.push(\"65\");\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[1]);// 归属////\r\n");
      out.write("                         responseDataArray2.push(responseDataArray1[i].split(\",\")[2]);// 台站ID////\r\n");
      out.write("                         responseDataArray2.push(responseDataArray1[i].split(\",\")[3]);// 经度////\r\n");
      out.write("                         responseDataArray2.push(responseDataArray1[i].split(\",\")[4]);// 纬度////\r\n");
      out.write("                         responseDataArray2.push(responseDataArray1[i].split(\",\")[5]);// 高////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[6]);// 中心频率////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[7]);// 传输功率////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[8]);// 衰减指数////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[9]);// 带宽////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[10]);// 调制方式////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[11]);// 调制参数////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[12]);// 业务属性////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[13]);// 活跃度////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[14]);// 是否非法////\r\n");
      out.write("                           index5_go(responseDataArray2); \r\n");
      out.write("                       responseDataArray2.splice(0,responseDataArray2.length);\r\n");
      out.write("                       }\r\n");
      out.write("       \t\t\t         break;\r\n");
      out.write("       \t\t\t/*\r\n");
      out.write("       \t    \tcase \"66\":\r\n");
      out.write("       \t    \t\t    responseDataArray1 = responseData.split(\",\");\r\n");
      out.write("                         index6_go(responseDataArray1);\r\n");
      out.write("                     //alert(\"将显示所有发射台站的位置及属性显示图\");\r\n");
      out.write("                     break;\r\n");
      out.write("                     */\r\n");
      out.write("       \t    \tcase \"67\":\r\n");
      out.write("       \t    \t\t      var len = responseData.split(\"|\").length;\r\n");
      out.write("                       var responseDataArray1 = new Array();//响应数组\r\n");
      out.write("                     responseDataArray1 = responseData.split(\"|\");\r\n");
      out.write("                       var responseDataArray2 = new Array();//响应数组\r\n");
      out.write("                     for(var i=0;i<len;i++){\r\n");
      out.write("                         responseDataArray2.push(\"67\");\r\n");
      out.write("                         responseDataArray2.push(responseDataArray1[i].split(\",\")[1]);// 终端ID////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[2]);// 等级////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[3]);// 经度////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[4]);// 纬度////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[5]);// 高////\r\n");
      out.write("                         responseDataArray2.push(responseDataArray1[i].split(\",\")[6]);// 注册时间////\r\n");
      out.write("                         responseDataArray2.push(responseDataArray1[i].split(\",\")[7]);// 最近一次登陆时间////\r\n");
      out.write("\r\n");
      out.write("                     index7_go(responseDataArray2); \r\n");
      out.write("                     responseDataArray2.splice(0,responseDataArray2.length);\r\n");
      out.write("                     }\r\n");
      out.write("       \t\t\t         break;\r\n");
      out.write("       \t    \tcase \"68\":\r\n");
      out.write("       \t    \t\t      var len = responseData.split(\"|\").length;\r\n");
      out.write("                         var responseDataArray1 = new Array();//响应数组\r\n");
      out.write("                       responseDataArray1 = responseData.split(\"|\");\r\n");
      out.write("                         var responseDataArray2 = new Array();//响应数组\r\n");
      out.write("                       for(var i=0;i<len;i++){\r\n");
      out.write("                           responseDataArray2.push(\"67\");\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[1]);// 终端ID////\r\n");
      out.write("                             responseDataArray2.push(responseDataArray1[i].split(\",\")[2]);// 等级////\r\n");
      out.write("                             responseDataArray2.push(responseDataArray1[i].split(\",\")[3]);// 经度////\r\n");
      out.write("                             responseDataArray2.push(responseDataArray1[i].split(\",\")[4]);// 纬度////\r\n");
      out.write("                             responseDataArray2.push(responseDataArray1[i].split(\",\")[5]);// 高////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[6]);// 注册时间////\r\n");
      out.write("                           responseDataArray2.push(responseDataArray1[i].split(\",\")[7]);// 最近一次登陆时间////\r\n");
      out.write("\r\n");
      out.write("                   index8_go(responseDataArray2); \r\n");
      out.write("                   responseDataArray2.splice(0,responseDataArray2.length);\r\n");
      out.write("                   }\r\n");
      out.write("     \t\t\t         break;\r\n");
      out.write("       \t    \tcase \"69\":\r\n");
      out.write("          \t\t     var len = responseData.split(\"|\").length;\r\n");
      out.write("                     var responseDataArray1 = new Array();//响应数组\r\n");
      out.write("                     var responseDataArray2 = new Array();//响应数组\r\n");
      out.write("                   responseDataArray1 = responseData.split(\"|\");\r\n");
      out.write("            \r\n");
      out.write("                   for(var i=0;i<len;i++){\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[1]);// longitude////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[2]);// latitude////\r\n");
      out.write("                   }\r\n");
      out.write("                     index9_go(responseDataArray2);\r\n");
      out.write("  \t\t\t\t     break;\r\n");
      out.write("       \t    \t  default: \r\n");
      out.write("       \t    \t\t\t alert(\"返回信息有错误！\");\r\n");
      out.write("       \t    \t\t     break;\r\n");
      out.write("       \t\t    }\r\n");
      out.write("       \t\t\t}\t \r\n");
      out.write("    \t\r\n");
      out.write("       \t\t//requestData.splice(0,requestData.length);//每次发完请求数据后就清除请求数据缓冲数组\r\n");
      out.write("\r\n");
      out.write("       \t\t });\r\n");
      out.write("\r\n");
      out.write("        T1=0;\r\n");
      out.write("        T2=0;\r\n");
      out.write("       \t\t\t//responseDataArray1.splice(0,responseDataArray.length);\r\n");
      out.write("       \t\t\t//responseDataArray2.splice(0,responseDataArray.length);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/************************************************1.态势图显示函数******************************************************************/\r\n");
      out.write("function index1_go(array){\r\n");
      out.write("  \r\n");
      out.write("  // map.clearOverlays();\r\n");
      out.write("  /*\r\n");
      out.write("    var PI = Math.PI;\r\n");
      out.write("    var H0=6378137;//地球半径，单位米\r\n");
      out.write("    var mConstant=21600;//计算的常数：360*60\r\n");
      out.write("  */\r\n");
      out.write("    var mLngitude;//经度\r\n");
      out.write("    var mLatitude;//纬度\r\n");
      out.write("    var mHeight;//高度\r\n");
      out.write("    var mPower;//功率值\r\n");
      out.write("    var mindex;//损耗指数\r\n");
      out.write("    var mRadius; //半径\r\n");
      out.write("    var mRatio;//分辨率\r\n");
      out.write("    /*\r\n");
      out.write("    var DetaY;//南-北网格边长\r\n");
      out.write("    var DetaX;//东-西网格边长\r\n");
      out.write("    var Nx;//= (int) (mRadius/DetaX);\r\n");
      out.write("    var Ny;//= (int) (mRadius/DetaY);\r\n");
      out.write("    var dd;//距离平方\r\n");
      out.write("    */\r\n");
      out.write("    var d;//距离\r\n");
      out.write(" \r\n");
      out.write("   mLngitude=array[4]*1;\r\n");
      out.write("   mLatitude=array[5]*1;\r\n");
      out.write("   mHeight=array[6]*1;\r\n");
      out.write("   mPower=array[7]*1;\r\n");
      out.write("   mindex=array[8]*1;\r\n");
      out.write("   mRadius=0;\r\n");
      out.write("   /*\r\n");
      out.write("   mRatio=array[3]*1;\r\n");
      out.write("   Nx=array[1]*1;\r\n");
      out.write("   Ny=array[2]*1;\r\n");
      out.write("   \r\n");
      out.write("\tvar mLngitude = array[0].LONGITUDE;\r\n");
      out.write("\tvar mLatitude = array[0].LATITUDE;\r\n");
      out.write("\tvar mHeight = array[0].HEIGHT;\r\n");
      out.write("\tvar mPower = array[0].TRANSFERPOWER;\r\n");
      out.write("\tvar mindex = array[0].TRANSINDEX;\r\n");
      out.write("\tvar mRadius = 0;\r\n");
      out.write("\tvar d;//距离\r\n");
      out.write("\t*/\r\n");
      out.write("\r\n");
      out.write("\tvar point = new BMap.Point(mLngitude, mLatitude);\r\n");
      out.write("\tmap.centerAndZoom(point, 13);\r\n");
      out.write("\t\r\n");
      out.write("\tvar circle;\r\n");
      out.write("\tvar p = {\r\n");
      out.write("\t\tfillColor : \"\",\r\n");
      out.write("\t\tfillOpacity : 0.6,\r\n");
      out.write("\t\t//strokeColor : \"\",\r\n");
      out.write("\t\tstrokeOpacity : 0.01,\r\n");
      out.write("\t\tstrokeWeight : 0.01\r\n");
      out.write("\t};\r\n");
      out.write("\tvar label;\r\n");
      out.write("\tvar colors = [ \"#red\", \"orange\",\"#969600\",\"yellow\",\"green\",\"blue\" ];\r\n");
      out.write("\t\r\n");
      out.write("\tfor (var i = 5; i >= 0; i--) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\td = Math.sqrt(Math.pow(10, 10 * i / (5 * 1.3)));//每10dbm一个圆,衰减1.3\r\n");
      out.write("\t\tp.fillColor = colors[i];\r\n");
      out.write("\t    circle = new BMap.Circle(point, d, p );\r\n");
      out.write("\t\tmap.addOverlay(circle);//增加圆\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlabel = new BMap.Label(\"功率值:\" + (mPower - i * 10) + \"dbm\", {\r\n");
      out.write("\t\t\tposition : new BMap.Point(point.lng, point.lat + ((d) / (2 * Math.PI * 6378137)) * 360),\r\n");
      out.write("\t\t\toffset : new BMap.Size(5, -15)\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tlabel.setStyle({\r\n");
      out.write("\t\t\tcolor : \"yellow\",\r\n");
      out.write("\t\t\tbackgroundColor : \"gray\"\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tmap.addOverlay(label);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/************************************************************************************************************************/\r\n");
      out.write("/************************************************2.路径图显示函数************************************************************/     \r\n");
      out.write("function index2_go(array){\r\n");
      out.write("\t\r\n");
      out.write(" \r\n");
      out.write("   \r\n");
      out.write("   map.centerAndZoom(new BMap.Point(114.420239, 30.515488), 15);\r\n");
      out.write("\r\n");
      out.write("\tvar len = array.length/3;\r\n");
      out.write("\tvar points = [];\r\n");
      out.write("\tvar points1 = [];\r\n");
      out.write("\tvar colors = [ \"#960000\", \"#C80006\", \"#E10006\", \"#F50400\", \"#FD2D00\",\r\n");
      out.write("\t\t\t\"#FA5000\", \"#FF7302\", \"#FFb600\", \"#FFD600\", \"#FBFF0E\",\r\n");
      out.write("\t\t\t\"#DBFE00\", \"#B0FF4E\", \"#7FFE7D\", \"#5EFE9F\", \"#35FCC8\",\r\n");
      out.write("\t\t\t\"#04FDC5\", \"#06E6DC\", \"#02CEFF\", \"#08AAFF\", \"#0895FF\",\r\n");
      out.write("\t\t\t\"#0376FF\", \"#005BFF\", \"#1717FF\", \"#0000DB\", \"#0000BD\",\r\n");
      out.write("\t\t\t\"#0000A2\", \"#000082\" ];\r\n");
      out.write("\t/*********GPS坐标转换—8阶椭圆FIR低通器滤波***********/\r\n");
      out.write("\r\n");
      out.write("\t/**********************************************/\r\n");
      out.write("\r\n");
      out.write("\tvar ccs = [];\r\n");
      out.write("\tvar cc;\r\n");
      out.write("\tvar m = 0;\r\n");
      out.write("\tfor (var i = 0; i < len; i++) {\r\n");
      out.write("\t\t//points.push(new BMap.Point(1*array[i].LONGITUDE+0.01217, 1*array[i].LATITUDE+0.0118));//将返回的数据解析解析成点的数组\r\n");
      out.write("\t\tpoints.push(new BMap.Point(1 * parseFloat(array[3*i]) + 0.012,1 *parseFloat( array[3*i+1]) + 0.003745));//将返回的数据解析解析成点的数组\r\n");
      out.write("\r\n");
      out.write("\t\tm = array[3*i+2];\r\n");
      out.write("\t\tif (m > -40) {\r\n");
      out.write("\t\t\tcc = '#960000';\r\n");
      out.write("\t\t} else if (m > -45) {\r\n");
      out.write("\t\t\tcc = '#E10006';\r\n");
      out.write("\t\t} else if (m > -50) {\r\n");
      out.write("\t\t\tcc = '#FA5000';\r\n");
      out.write("\t\t} else if (m > -55) {\r\n");
      out.write("\t\t\tcc = '#FBFF0E';\r\n");
      out.write("\t\t} else if (m > -60) {\r\n");
      out.write("\t\t\tcc = '#DBFE00';\r\n");
      out.write("\t\t} else if (m > -65) {\r\n");
      out.write("\t\t\tcc = '#B0FF4E';\r\n");
      out.write("\t\t} else if (m > -70) {\r\n");
      out.write("\t\t\tcc = '#7FFE7D';\r\n");
      out.write("\t\t} else if (m > -75) {\r\n");
      out.write("\t\t\tcc = '#5EFE9F';\r\n");
      out.write("\t\t} else if (m > -80) {\r\n");
      out.write("\t\t\tcc = '#35FCC8';\r\n");
      out.write("\t\t} else if (m > -85) {\r\n");
      out.write("\t\t\tcc = '#02CEFF';\r\n");
      out.write("\t\t} else if (m > -90) {\r\n");
      out.write("\t\t\tcc = '#08AAFF';\r\n");
      out.write("\t\t} else if (m > -95) {\r\n");
      out.write("\t\t\tcc = '#0376FF';\r\n");
      out.write("\t\t} else if (m > -100) {\r\n");
      out.write("\t\t\tcc = '#005BFF';\r\n");
      out.write("\t\t} else if (m > -105) {\r\n");
      out.write("\t\t\tcc = '#0000DB';\r\n");
      out.write("\t\t} else\r\n");
      out.write("\t\t\tcc = '#0000FF';\r\n");
      out.write("\t\tccs.push(cc);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tvar myIcon = new BMap.Icon(\"http://api.map.baidu.com/img/markers.png\",\r\n");
      out.write("\t\t\tnew BMap.Size(23, 25), {\r\n");
      out.write("\t\t\t\toffset : new BMap.Size(10, 25),\r\n");
      out.write("\t\t\t\timageOffset : new BMap.Size(0, 0 - 0 * 25)\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\tmap.addOverlay(new BMap.Marker(points[0], {\r\n");
      out.write("\t\ticon : myIcon\r\n");
      out.write("\t}));\r\n");
      out.write(" T1 = window.setInterval(function() {\r\n");
      out.write("\r\n");
      out.write("\t\t//map.centerAndZoom(points[T2],16);  \r\n");
      out.write("\t\t//添加远点到地图 \r\n");
      out.write("\t\tvar circle = new BMap.Circle(points[T2], 20);\r\n");
      out.write("\t\tcircle.setFillColor(ccs[T2]);\r\n");
      out.write("\t\tcircle.setStrokeWeight(0.1);\r\n");
      out.write("\t\tcircle.setFillOpacity(0.8);\r\n");
      out.write("\t\tmap.addOverlay(circle);//增加圆 \r\n");
      out.write("\r\n");
      out.write("\t/* \t//添加折线到地图上\r\n");
      out.write("\t\tvar polyline = new BMap.Polyline(points, {strokeColor:\"blue\", strokeWeight:5, strokeOpacity:0.6});\r\n");
      out.write("\t\tmap.addOverlay(polyline); */\r\n");
      out.write("\t\t T2++;\r\n");
      out.write("\t\tif (T2 > (len - 2))\r\n");
      out.write("\t\t\twindow.clearInterval(T1);\r\n");
      out.write("\t}, 100); \r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("/************************************************************************************************************************/\r\n");
      out.write("/********************************************3.异常频点辐射源位置及等功率覆盖圆图显示函数*******************************************/  \r\n");
      out.write("\r\n");
      out.write("function index3_go(array){\r\n");
      out.write("      //map.clearOverlays();\r\n");
      out.write("      \r\n");
      out.write("      var point = new BMap.Point(array[2]*1,array[3]*1);\r\n");
      out.write("      map.centerAndZoom(point,13);////////////\r\n");
      out.write("\r\n");
      out.write("    var myIcon = new BMap.Icon(\"http://api.map.baidu.com/img/markers.png\", new BMap.Size(23, 25),{offset: new BMap.Size(10, 25),imageOffset: new BMap.Size(0, 0-4*25)}); \r\n");
      out.write("      var marker = new BMap.Marker(point, {icon: myIcon});\r\n");
      out.write("    //var label = new BMap.Label(\"异常频点辐射源的位置：\"+\"经度\"+point.lng+\",纬度\"+point.lat+\"<br>\"+\"属性：\",{offset:new BMap.Size(10,20)});\r\n");
      out.write("    //label.setStyle({ color : \"blue\" ,backgroundColor:\"gray\"});\r\n");
      out.write("    //marker.setLabel(label);\r\n");
      out.write("      map.addOverlay(marker);\r\n");
      out.write("      var content =                  \r\n");
      out.write("          \"<br>\"+\"归属单位：\"+array[1]\r\n");
      out.write("       +\"<br>\"+\"时间占用度：\"+array[11]\r\n");
      out.write("         +\"<br>\"+\"业务属性判断结果：\"+array[12]\r\n");
      out.write("         +\"<br>\"+\"是否合法：\"+array[13]\r\n");
      out.write("         +\"<br>\"+\"中心频率：\"+array[5]\r\n");
      out.write("         +\"<br>\"+\"带宽：\"+array[6]\r\n");
      out.write("         +\"<br>\"+\"调制方式：\"+array[8]\r\n");
      out.write("         +\"<br>\"+\"调制参数：\"+array[7]\r\n");
      out.write("         +\"<br>\"+\"地理位置：\"+array[2]+\",\"+array[3]+\",\"+array[4]\r\n");
      out.write("         +\"<br>\"+\"传输功率：\"+array[9]\r\n");
      out.write("         +\"<br>\"+\"衰减指数：\"+array[10];\r\n");
      out.write("      addClickHandler4(content,marker);\r\n");
      out.write("    //marker.setAnimation(BMAP_ANIMATION_BOUNCE);\r\n");
      out.write("\t\tvar strokeColors = [ \"#960000\", \"#FD2D00\", \"#FFb600\", \"#FFD600\",\"#7FFE7D\", \"#02CEFF\", \"#aabbcc\" ];\r\n");
      out.write("\t\tvar d = 0;\r\n");
      out.write("\t\tfor (var i = 0; i < strokeColors.length; i++) {\r\n");
      out.write("\r\n");
      out.write("\t\t\td = Math.sqrt(Math.pow(10, 10 * i / (5 * 2)));//每10dbm一个圆\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar circle = new BMap.Circle(point, d, {\r\n");
      out.write("\t\t\t\tstrokeColor : strokeColors[i],\r\n");
      out.write("\t\t\t\tfillColor : \"\",\r\n");
      out.write("\t\t\t\tstrokeWeight : 3,\r\n");
      out.write("\t\t\t\tstrokeStyle : \"\",\r\n");
      out.write("\t\t\t\tstrokeOpacity : 0.8\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tmap.addOverlay(circle);//增加圆\r\n");
      out.write("\t\t\tcircle.addEventListener(\"click\", function(e) {alert(\"功率值:\" + e.target.getStrokeColor());});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar label = new BMap.Label(\"功率值:\" + (array[9] - i * 10) + \"dbm\", {\r\n");
      out.write("\t\t\t\tposition : new BMap.Point(point.lng, point.lat + ((d) / (2 * Math.PI * 6378137)) * 360),\r\n");
      out.write("\t\t\t\toffset : new BMap.Size(5, -10)\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tlabel.setStyle({\r\n");
      out.write("\t\t\t\tcolor : \"yellow\",\r\n");
      out.write("\t\t\t\tbackgroundColor : \"gray\"\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tmap.addOverlay(label);\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction addClickHandler4(content, marker) {\r\n");
      out.write("\t\tmarker.addEventListener(\"click\", function(e) {\r\n");
      out.write("\t\t\topenInfo4(content, e);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction openInfo4(content, e) {\r\n");
      out.write("\t\tvar p = e.target;\r\n");
      out.write("\t\tvar point = new BMap.Point(p.getPosition().lng, p.getPosition().lat);\r\n");
      out.write("\t\tvar infoWindow = new BMap.InfoWindow(\r\n");
      out.write("\t\t\t\tcontent,\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\theight : 300,\r\n");
      out.write("\t\t\t\t\ttitle : \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;台站登记属性\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\tmap.openInfoWindow(infoWindow, point);\r\n");
      out.write("\t\t\r\n");
      out.write("   }\r\n");
      out.write("/************************************************************************************************************************/ \r\n");
      out.write("/********************************************4.登记发射台站的位置及属性显示图显示函数*******************************************/    \r\n");
      out.write("  //map.clearOverlays();\r\n");
      out.write("     /*\r\n");
      out.write("     没有加 64 功能妈\r\n");
      out.write("     \r\n");
      out.write("     var content = \r\n");
      out.write("          \"<br>\"+\"归属单位：\"+array[1]\r\n");
      out.write("           +\"<br>\"+\"识别码：\"+array[2]\r\n");
      out.write("           +\"<br>\"+\"地理位置：\"+array[3]+\",\"+array[4]+\",\"+array[5]\r\n");
      out.write("           +\"<br>\"+\"中心频率许可范围：\"+array[6]+\"-\"+array[7]\r\n");
      out.write("           +\"<br>\"+\"额定发射最大功率：\"+array[8]\r\n");
      out.write("           +\"<br>\"+\"信号工作带宽：\"+array[9]\r\n");
      out.write("           +\"<br>\"+\"调制方式：\"+array[10]\r\n");
      out.write("           +\"<br>\"+\"调制参数：\"+array[11]\r\n");
      out.write("           +\"<br>\"+\"业务属性：\"+array[12]\r\n");
      out.write("           +\"<br>\"+\"标称覆盖半径：\"+array[13]\r\n");
      out.write("           +\"<br>\"+\"时间占用度：\"+array[14];\r\n");
      out.write("       */    \r\n");
      out.write("           \r\n");
      out.write("    var markerClustere;\r\n");
      out.write("function index4_go(array) {\r\n");
      out.write("       \t\t\r\n");
      out.write("       \t\tmap.centerAndZoom(new BMap.Point(114.420239, 30.515488), 16); ////////////\r\n");
      out.write("       \t\t\r\n");
      out.write("       \t\tfunction index4_1_go(){\r\n");
      out.write("       \t\t\t\r\n");
      out.write("       \t\tif(markerClustere!=null)\r\n");
      out.write("       \t\tmarkerClustere.clearMarkers();\r\n");
      out.write("       \t\t//当前页面不是该服务的时候移除对地图的绑定。\r\n");
      out.write("       \t\tif((document.getElementById ('select1').value!=4 )&&(document.getElementById ('select1').value!=6) )\r\n");
      out.write("\r\n");
      out.write("            {map.removeEventListener(\"dragend\",index4_1_go);return;}\r\n");
      out.write("       \t\t\r\n");
      out.write("       \t\tvar point;\r\n");
      out.write("       \t\tvar marker;\r\n");
      out.write("       \t\tvar myIcon;\r\n");
      out.write("       \t\tvar markers = [];\r\n");
      out.write("       \t\tfor (var i = 0; i < array.length/14; i++) {\r\n");
      out.write("       \t\t    point = new BMap.Point(parseFloat(array[14*i+2]) + 0.012,parseFloat(array[14*i+3]) + 0.003745);\r\n");
      out.write("       \t\t\t\r\n");
      out.write("       \t\t\tif(map.getBounds().containsPoint(point)){//如果改点再当前可视范围，则显示。2016-04-27 17:00新增 \r\n");
      out.write("       \t\t\t\t\r\n");
      out.write("       \t\t\t\t if( array[14*i]===(\"chinaNet\") ){\r\n");
      out.write("       \t\t\t            myIcon = new BMap.Icon(\"imgs/dianxin1.png\",new BMap.Size(40, 50));\r\n");
      out.write("       \t\t\t\t\t}else if( array[14*i]===(\"chinaMove\") ){\r\n");
      out.write("       \t\t\t\t\t\tmyIcon = new BMap.Icon(\"imgs/yidong1.png\",new BMap.Size(40, 50));\r\n");
      out.write("       \t\t\t\t\t}else if( array[14*i]===(\"chinaUnion\") ){\r\n");
      out.write("       \t\t\t\t\t\tmyIcon = new BMap.Icon(\"imgs/liantong1.png\",new BMap.Size(40, 50));\r\n");
      out.write("       \t\t\t\t\t}else{\r\n");
      out.write("       \t\t\t\t        myIcon = new BMap.Icon(\"http://api.map.baidu.com/img/markers.png\",new BMap.Size(23, 25));\r\n");
      out.write("       \t\t\t\t    }\r\n");
      out.write("       \t\t    marker = new BMap.Marker(point, {icon : myIcon});\r\n");
      out.write("       \t\t    //marker = new BMap.Marker(point);\r\n");
      out.write("       \t\t\tmarkers.push(marker);\r\n");
      out.write("       \t\t\r\n");
      out.write("       \t\t\tvar content = \"<br>\" + \"归属单位：\" + array[14*i] + \"<br>\"\r\n");
      out.write("       \t\t\t\t\t+ \"地理位置：\"\r\n");
      out.write("       \t\t\t\t\t+ array[14*i+2] + \"<br>\" + array[14*i+3] + \"<br>\"\r\n");
      out.write("       \t\t\t\t\t+ array[14*i+4] + \"<br>\" + \"中心频率许可范围：\"\r\n");
      out.write("       \t\t\t\t\t+ array[14*i+5] + \"-\" + array[14*i+6] + \"<br>\"\r\n");
      out.write("       \t\t\t\t\t+ \"额定发射最大功率：\" + array[14*i+7] + \"<br>\" + \"信号工作带宽：\"\r\n");
      out.write("       \t\t\t\t\t+ array[14*i+8] + \"<br>\" + \"调制方式：\"\r\n");
      out.write("       \t\t\t\t\t+ array[14*i+9] + \"<br>\" + \"调制参数：\"\r\n");
      out.write("       \t\t\t\t\t+ array[14*i+10] + \"<br>\" + \"业务属性：\"\r\n");
      out.write("       \t\t\t\t\t+ array[14*i+11] + \"<br>\" + \"标称覆盖半径：\"\r\n");
      out.write("       \t\t\t\t\t+ array[14*i+12] + \"<br>\" + \"时间占用度：\"\r\n");
      out.write("       \t\t\t\t\t+ array[14*i+13];\r\n");
      out.write("       \t\t\taddClickHandler(content,marker);////////\r\n");
      out.write("       \t\t  }\r\n");
      out.write("       \t\t}\r\n");
      out.write("       \t    markerClustere = new BMapLib.MarkerClusterer(map, {'markers':markers});\r\n");
      out.write("       \t}\t\r\n");
      out.write("       \t\tindex4_1_go();\r\n");
      out.write("       \t    map.addEventListener(\"dragend\",index4_1_go);\r\n");
      out.write("       \t}\r\n");
      out.write("       \t   \r\n");
      out.write("       \tfunction addClickHandler(content, marker) {/////////\r\n");
      out.write("       \t\tmarker.addEventListener(\"click\", function(e) {\r\n");
      out.write("       \t\t\topenInfo(content, e);\r\n");
      out.write("       \t\t});\r\n");
      out.write("       \t}\r\n");
      out.write("       \tfunction openInfo(content, e) {\r\n");
      out.write("       \t\tvar p = e.target;\r\n");
      out.write("       \t\tvar point = new BMap.Point(p.getPosition().lng, p.getPosition().lat);\r\n");
      out.write("       \t\tvar infoWindow = new BMap.InfoWindow(\r\n");
      out.write("       \t\t\t\tcontent,\r\n");
      out.write("       \t\t\t\t{\r\n");
      out.write("       \t\t\t\t\twidth : 300,\r\n");
      out.write("       \t\t\t\t\theight : 300,\r\n");
      out.write("       \t\t\t\t\ttitle : \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;台站登记属性\"\r\n");
      out.write("       \t\t\t\t});\r\n");
      out.write("       \t\tmap.openInfoWindow(infoWindow, point);\r\n");
      out.write("       \t}\r\n");
      out.write("\r\n");
      out.write("/************************************************************************************************************************/\r\n");
      out.write("/********************************************5.登记发射台站的当前位置及等功率覆盖圆图显示函数*******************************************/    \r\n");
      out.write("function index5_go(array){\r\n");
      out.write("    //map.clearOverlays();\r\n");
      out.write("    \r\n");
      out.write("    var point = new BMap.Point(array[3]*1,array[4]*1);\r\n");
      out.write("    map.centerAndZoom(new BMap.Point(114.420239,30.515488),13);////////////\r\n");
      out.write("\r\n");
      out.write("  var myIcon = new BMap.Icon(\"http://api.map.baidu.com/img/markers.png\", new BMap.Size(23, 25),{offset: new BMap.Size(10, 25),imageOffset: new BMap.Size(0, 0-4*25)}); \r\n");
      out.write("    var marker = new BMap.Marker(point, {icon: myIcon});\r\n");
      out.write("  \r\n");
      out.write("    map.addOverlay(marker);\r\n");
      out.write("    var content =                  \r\n");
      out.write("       \"<br>\"+\"归属单位：\"+array[1]\r\n");
      out.write("        +\"<br>\"+\"识别码：\"+array[2]\r\n");
      out.write("        +\"<br>\"+\"地理位置：\"+array[3]+\",\"+array[4]+\",\"+array[5]\r\n");
      out.write("        +\"<br>\"+\"中心频率：\"+array[6]\r\n");
      out.write("        +\"<br>\"+\"额定发射最大功率：\"+array[7]\r\n");
      out.write("        +\"<br>\"+\"衰减指数：\"+array[8]\r\n");
      out.write("        +\"<br>\"+\"信号工作带宽：\"+array[9]\r\n");
      out.write("        +\"<br>\"+\"调制方式：\"+array[10]\r\n");
      out.write("        +\"<br>\"+\"调制参数：\"+array[11]\r\n");
      out.write("        +\"<br>\"+\"业务属性：\"+array[12]\r\n");
      out.write("        +\"<br>\"+\"活跃度：\"+array[13]\r\n");
      out.write("        +\"<br>\"+\"是否非法：\"+array[14];\r\n");
      out.write("    addClickHandler5(content,marker);\r\n");
      out.write("  //marker.setAnimation(BMAP_ANIMATION_BOUNCE);\r\n");
      out.write("  var strokeColors =[\"#960000\",\"#FD2D00\",\"#FFb600\",\"#FFD600\",\"#7FFE7D\",\"#02CEFF\",\"#aabbcc\"];\r\n");
      out.write("  var d=0;\r\n");
      out.write("  for(var i=0;i<strokeColors.length;i++){\r\n");
      out.write("    \r\n");
      out.write("  d=Math.sqrt( Math.pow( 10,10*i/(5*2) ) );//每10dbm一个圆\r\n");
      out.write("    \r\n");
      out.write("    var circle = new BMap.Circle(point,d,{strokeColor:strokeColors[i],fillColor:\"\",strokeWeight:3, strokeStyle:\"\", strokeOpacity:0.8});\r\n");
      out.write("    map.addOverlay(circle);//增加圆\r\n");
      out.write("    circle.addEventListener(\"click\",function(e){alert(\"功率值:\"+e.target.getStrokeColor());});\r\n");
      out.write("    \r\n");
      out.write("    var label = new BMap.Label(\"功率值:\"+(array[7]-i*10)+\"dbm\",{position:new BMap.Point(point.lng,point.lat+((d)/(2*Math.PI*6378137))*360),offset:new BMap.Size(5,-10)});\r\n");
      out.write("    label.setStyle({ color : \"blue\",backgroundColor:\"gray\"});\r\n");
      out.write("    map.addOverlay(label);\r\n");
      out.write("  \r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("function addClickHandler5(content,marker){\r\n");
      out.write(" marker.addEventListener(\"click\",function(e){openInfo5(content,e);});\r\n");
      out.write("}\r\n");
      out.write("function openInfo5(content,e){\r\n");
      out.write("var p = e.target;\r\n");
      out.write("var point = new BMap.Point(p.getPosition().lng,p.getPosition().lat);\r\n");
      out.write("var infoWindow = new BMap.InfoWindow(content,{width:300,height:300,title:\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;台站登记属性\"});\r\n");
      out.write("map.openInfoWindow(infoWindow,point);\r\n");
      out.write("}\r\n");
      out.write("/************************************************************************************************************************/     \r\n");
      out.write("/********************************************6.所有发射台站的位置及属性显示图显示函数*******************************************/    \r\n");
      out.write("function index6_go(array){\r\n");
      out.write("  map.clearOverlays();\r\n");
      out.write("   var points =[];\r\n");
      out.write("   var len = (array.length-1)/2;\r\n");
      out.write("   var n=0;\r\n");
      out.write("   for(var i=1;i<=len;i++){\r\n");
      out.write("     points.push(new BMap.Point(array[2*i-1]*1, array[2*i]*1));//将返回的数据解析解析成点的数组\r\n");
      out.write("     var marker = new BMap.Marker(points[i-1]);\r\n");
      out.write("     map.addOverlay(marker);\r\n");
      out.write("     var content = \r\n");
      out.write("          \"<br>\"+\"归属单位：\"\r\n");
      out.write("           +\"<br>\"+\"识别码：\"\r\n");
      out.write("           +\"<br>\"+\"地理位置：\"+array[2*i-1]*1+\",\"+array[2*i]*1\r\n");
      out.write("           +\"<br>\"+\"中心频率许可范围：\"\r\n");
      out.write("           +\"<br>\"+\"额定发射最大功率：\"\r\n");
      out.write("           +\"<br>\"+\"信号工作带宽：\"\r\n");
      out.write("           +\"<br>\"+\"调制方式：\"\r\n");
      out.write("           +\"<br>\"+\"调制参数：\"\r\n");
      out.write("           +\"<br>\"+\"业务属性：\"\r\n");
      out.write("           +\"<br>\"+\"标称覆盖半径：\"\r\n");
      out.write("           +\"<br>\"+\"时间占用度：\";\r\n");
      out.write("     addClickHandler1(content,marker);\r\n");
      out.write("   }\r\n");
      out.write("   map.centerAndZoom(new BMap.Point(114.420239,30.515488),13); ////////////\r\n");
      out.write("}\r\n");
      out.write("function addClickHandler1(content,marker){\r\n");
      out.write("   marker.addEventListener(\"click\",function(e){openInfo1(content,e);});\r\n");
      out.write("}\r\n");
      out.write("function openInfo1(content,e){\r\n");
      out.write("    var p = e.target;\r\n");
      out.write("    var point = new BMap.Point(p.getPosition().lng,p.getPosition().lat);\r\n");
      out.write("    var infoWindow = new BMap.InfoWindow(content,{width:300,height:300,title:\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;全部台站记录属性\"});\r\n");
      out.write("    map.openInfoWindow(infoWindow,point); \r\n");
      out.write("}\r\n");
      out.write("/********************************************7.所有注册监测终端的位置及属性显示图显示函数*******************************************/    \r\n");
      out.write("/************************************************************************************************************************/     \r\n");
      out.write("function index7_go(array){\r\n");
      out.write("  //map.clearOverlays();\r\n");
      out.write("   var point = new BMap.Point(array[3]*1, array[4]*1);\r\n");
      out.write("   map.centerAndZoom(new BMap.Point(114.420239,30.515488),13); ////////////\r\n");
      out.write("   //var n=0;\r\n");
      out.write("\r\n");
      out.write("     var myIcon = new BMap.Icon(\"http://api.map.baidu.com/img/markers.png\", new BMap.Size(23, 25),{offset: new BMap.Size(10, 25),imageOffset: new BMap.Size(0, 0-6*25)}); \r\n");
      out.write("       var marker = new BMap.Marker(point, {icon: myIcon});\r\n");
      out.write("     map.addOverlay(marker);\r\n");
      out.write("     var content = \r\n");
      out.write("          \"<br>\"+\"终端ID号：\"+array[1]\r\n");
      out.write("           +\"<br>\"+\"终端类型：\"+array[2]\r\n");
      out.write("           +\"<br>\"+\"地理位置：\"+array[3]+\",\"+array[4]+\",\"+array[5]\r\n");
      out.write("            +\"<br>\"+\"注册时间：\"+array[6]\r\n");
      out.write("           +\"<br>\"+\"最近一次登陆时间：\"+array[7];\r\n");
      out.write("\r\n");
      out.write("   addClickHandler2(content,marker);\r\n");
      out.write("}\r\n");
      out.write("function addClickHandler2(content,marker){\r\n");
      out.write("   marker.addEventListener(\"click\",function(e){openInfo2(content,e);});\r\n");
      out.write("}\r\n");
      out.write("function openInfo2(content,e){\r\n");
      out.write("    var p = e.target;\r\n");
      out.write("    var point = new BMap.Point(p.getPosition().lng,p.getPosition().lat);\r\n");
      out.write("    var infoWindow = new BMap.InfoWindow(content,{width:200,height:250,title:\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;所有注册终端属性\"});\r\n");
      out.write("    map.openInfoWindow(infoWindow,point); \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/************************************************************************************************************************/     \r\n");
      out.write("/********************************************8.当前所有在网监测终端的位置及属性图显示函数*******************************************/    \r\n");
      out.write("function index8_go(array){\r\n");
      out.write("  //map.clearOverlays();\r\n");
      out.write("   var point = new BMap.Point(array[3]*1, array[4]*1);\r\n");
      out.write("   map.centerAndZoom(new BMap.Point(114.420239,30.515488),13); ////////////\r\n");
      out.write("   //var n=0;\r\n");
      out.write("\r\n");
      out.write("     var myIcon = new BMap.Icon(\"http://api.map.baidu.com/img/markers.png\", new BMap.Size(23, 25),{offset: new BMap.Size(10, 25),imageOffset: new BMap.Size(0, 0-6*25)}); \r\n");
      out.write("       var marker = new BMap.Marker(point, {icon: myIcon});\r\n");
      out.write("     map.addOverlay(marker);\r\n");
      out.write("     var content = \r\n");
      out.write("          \"<br>\"+\"终端ID号：\"+array[1]\r\n");
      out.write("           +\"<br>\"+\"终端类型：\"+array[2]\r\n");
      out.write("           +\"<br>\"+\"地理位置：\"+array[3]+\",\"+array[4]+\",\"+array[5]\r\n");
      out.write("           +\"<br>\"+\"注册时间：\"+array[6]\r\n");
      out.write("           +\"<br>\"+\"最近一次登陆时间：\"+array[7];\r\n");
      out.write("\r\n");
      out.write("   addClickHandler3(content,marker);\r\n");
      out.write("   \r\n");
      out.write("   var t1=0; t2=0;\r\n");
      out.write("   t1=window.setInterval(function(){\r\n");
      out.write("\t   if(t2==0){\r\n");
      out.write("\t\t   t2=1;\r\n");
      out.write("\t\t   marker.show();\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t\t   else {\r\n");
      out.write("\t\t\t   t2=0;\r\n");
      out.write("\t\t\t   marker.hide();\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t   \r\n");
      out.write("   },200);\r\n");
      out.write("   \r\n");
      out.write("     map.addEventListener(\"click\",function(){window.clearInterval(t1);                    \r\n");
      out.write("                                            marker.show();\r\n");
      out.write("                                            t1=t2=0;});     \r\n");
      out.write("}\r\n");
      out.write("function addClickHandler3(content,marker){\r\n");
      out.write("   marker.addEventListener(\"click\",function(e){openInfo3(content,e);});\r\n");
      out.write("}\r\n");
      out.write("function openInfo3(content, e) {\r\n");
      out.write("\tvar p = e.target;\r\n");
      out.write("\tvar point = new BMap.Point(p.getPosition().lng, p.getPosition().lat);\r\n");
      out.write("\tvar infoWindow = new BMap.InfoWindow(\r\n");
      out.write("\t\t\tcontent,\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\theight : 250,\r\n");
      out.write("\t\t\t\ttitle : \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;所有在网终端属性\"\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\tmap.openInfoWindow(infoWindow, point); }\r\n");
      out.write("\r\n");
      out.write("/************************************************************************************************************************/     \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/**********************************9. 本地的功率谱数据文件 路径 图 ******************************************************/     \r\n");
      out.write("TIME1=0,TIME2=0;\r\n");
      out.write("function alwaysSendData(){\r\n");
      out.write("\t\r\n");
      out.write("\tvar obj= document.getElementById(\"select1\");\r\n");
      out.write("    var index = obj.selectedIndex; // 选中索引\r\n");
      out.write("    var value= obj.options[index].value;\r\n");
      out.write("    \r\n");
      out.write("     if(value==\"9\"){\r\n");
      out.write("          \r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t       if(TIME2==1){\r\n");
      out.write("\t\t       TIME2=0;\r\n");
      out.write("\t           document.getElementById(\"genzong\").value = \"跟踪\";\r\n");
      out.write("\t           window.clearInterval(TIME1);\r\n");
      out.write("\t           TIME1 = 0;\r\n");
      out.write("\t       }\r\n");
      out.write("\t       else{ \r\n");
      out.write("\t    \t   map.clearOverlays();\r\n");
      out.write("\t    \t   \r\n");
      out.write("\t\t       TIME2=1;\r\n");
      out.write("\t\t       document.getElementById(\"genzong\").value = \"关闭\";\r\n");
      out.write("\t\t       TIME1 = window.setInterval(function(){   \r\n");
      out.write("\t\t\t     \r\n");
      out.write("\t           $.post(\"http://localhost:8080/MapTest/QueryDataBase\", \r\n");
      out.write("   \t            {\r\n");
      out.write("   \t\t\t\t     convertData:\"\"+9  //将页面设置的地图服务参数传到服务器\r\n");
      out.write("                 \r\n");
      out.write("   \t\t\t    },\r\n");
      out.write("   \t\t        function(responseData,status)\r\n");
      out.write("   \t\t        {    \r\n");
      out.write("   \t\t\t\t     //requestData.splice(0,requestData.length);//每次发完请求数据后就清除请求数据缓冲数组\r\n");
      out.write("   \t\t\t\t     //alert(\"响应数据：\\n\"+responseData);\r\n");
      out.write("\r\n");
      out.write("   \t\t             if(status===\"success\" && responseData!=\"\")\r\n");
      out.write("   \t\t             {//如果回传数据成功 \r\n");
      out.write("   \t\t           // \talert(\"响应数据：\\n\"+responseData);\r\n");
      out.write("   \t\t       \r\n");
      out.write("   \t\t             // map.clearOverlays();\r\n");
      out.write("                     \r\n");
      out.write("   \t\t             var len = responseData.split(\"|\").length;\r\n");
      out.write("                     var responseDataArray1 = new Array();//响应数组\r\n");
      out.write("                     var responseDataArray2 = new Array();//响应数组\r\n");
      out.write("                   responseDataArray1 = responseData.split(\"|\");\r\n");
      out.write("            \r\n");
      out.write("                   for(var i=0;i<len;i++){\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[1]);// longitude////\r\n");
      out.write("                       responseDataArray2.push(responseDataArray1[i].split(\",\")[2]);// latitude////\r\n");
      out.write("                          }\r\n");
      out.write("                     \r\n");
      out.write("                     index9_go(responseDataArray2);\r\n");
      out.write("                     \r\n");
      out.write("\t                 responseDataArray2.splice(0,responseDataArray2.length);\r\n");
      out.write("\t                 }\r\n");
      out.write("\t                \r\n");
      out.write("   \t\t             });\r\n");
      out.write("   \t\t       },3000);\r\n");
      out.write("\t     }\r\n");
      out.write("\t\t      \r\n");
      out.write("     }\r\n");
      out.write("}\r\n");
      out.write("function index9_go(array){\r\n");
      out.write("\t\r\n");
      out.write(" \r\n");
      out.write("   \r\n");
      out.write("   //map.centerAndZoom(new BMap.Point(114.420239, 30.515488), 19);\r\n");
      out.write("  map.centerAndZoom(new BMap.Point(1 * parseFloat(array[0]) + 0.012,1 *parseFloat( array[1]) + 0.003745),19);\r\n");
      out.write("\r\n");
      out.write("\tvar len = array.length/2;\r\n");
      out.write("\tvar points = [];\r\n");
      out.write("\r\n");
      out.write("\tfor (var i = 0; i < len; i++) {\r\n");
      out.write("\t\t//points.push(new BMap.Point(1*array[i].LONGITUDE+0.01217, 1*array[i].LATITUDE+0.0118));//将返回的数据解析解析成点的数组\r\n");
      out.write("\t\tpoints.push(new BMap.Point(1 * parseFloat(array[2*i]) + 0.012,1 *parseFloat( array[2*i+1]) + 0.003745));//将返回的数据解析解析成点的数组\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\tvar myIcon = new BMap.Icon(\"http://api.map.baidu.com/img/markers.png\",\r\n");
      out.write("\t\t\tnew BMap.Size(23, 25), {\r\n");
      out.write("\t\t\t\toffset : new BMap.Size(10, 25),\r\n");
      out.write("\t\t\t\timageOffset : new BMap.Size(0, 0 - 0 * 25)\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\tmap.addOverlay(new BMap.Marker(points[0], {\r\n");
      out.write("\t\ticon : myIcon\r\n");
      out.write("\t}));\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("  //  map.centerAndZoom(points[0],15);\r\n");
      out.write("\t\t//添加远点到地图 \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t//添加折线到地图上\r\n");
      out.write("\t\tvar polyline = new BMap.Polyline(points, {strokeColor:\"blue\", strokeWeight:5, strokeOpacity:0.6});\r\n");
      out.write("\t\tmap.addOverlay(polyline);\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
